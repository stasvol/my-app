{"version":3,"sources":["components/Dialogs/Dialog.module.css","components/Profile/ProfilInfo/ProfilInfo.module.css","components/Dialogs/Dialog.Form.js","Photo/Images/smail.png","components/Profile/MyPosts/MyPost.module.css","components/Profile/ProfAvatar/ProfAvatar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfilInfo/ProfilStatus.js","components/Profile/ProfilInfo/ProfilStatusWithHook.js","components/Profile/ProfilInfo/ProfDataForm.js","components/Profile/ProfilInfo/ProfilInfo.js","components/Profile/ProfAvatar/ProfAvatar.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPostForm.js","components/Profile/MyPosts/MyPost.js","components/Profile/MyPosts/MyPostContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","bg","circle","active","dialog","imgCont","smail","status","image","contact","formError","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","redux_form__WEBPACK_IMPORTED_MODULE_1__","redux_form__WEBPACK_IMPORTED_MODULE_2__","_Dialog_module_css__WEBPACK_IMPORTED_MODULE_3__","_Dialog_module_css__WEBPACK_IMPORTED_MODULE_3___default","_common_FormControl_formComponent__WEBPACK_IMPORTED_MODULE_4__","_Utility_ValidateForm_validator__WEBPACK_IMPORTED_MODULE_5__","maxLength30","maxLength","minLength2","minLength","DialogForm","props","handleSubmit","a","createElement","onSubmit","name","component","Textarea","validate","required","placeholder","className","classes","btn","reduxForm","form","p","posts","head","img","content","block","post","imgAvat","React","Component","ProfilStatusHook","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","_useState4","setStatus","useEffect","react_default","onChange","e","target","value","onBlur","updateStatus","type","onDoubleClick","ProfDataFormReduxForm","_ref","esm_extends","error","createField","Input","keys","profile","contacts","map","key","Contact","_ref2","contactTitle","contactValue","ProfData","_ref3","isOwner","onClick","goToEditMode","fullName","aboutMe","lookingForAJob","src","alt","lookingForAJobDescription","ProfilInfo_Contact","ProfInfo","preloader","ProfilStatusWithHook","photos","small","kot","files","length","savePhoto","ProfilInfo_ProfDataForm","assign","formData","editProfile","then","console","log","initialValues","ProfilInfo_ProfData","ProfAvatar","Post","message","like","maxLength20","MyPostForm","Field","memo","PostUser","PostData","MyPosts_Post_Post","id","MyPosts_MyPostForm","addPost","newText","MyPostContainer","connect","state","profPage","dispatch","addChangeText","newPost","action","MyPost","Profile","ProfilInfo","Profile_ProfAvatar_ProfAvatar","MyPosts_MyPostContainer","ProfileContainer","userId","this","match","params","authorisedUserId","history","push","getUsers","getStatus","userUpdateProfile","prevProps","prevState","snapshot","components_Profile_Profile","compose","auth","isAuth","setUsersProfile","profileThunkCreator","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.12822ce0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Dialog_bg__1lYOv\",\"circle\":\"Dialog_circle__jrOb2\",\"active\":\"Dialog_active__3ACLl\",\"dialog\":\"Dialog_dialog__3T9Jg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgCont\":\"ProfilInfo_imgCont__1Yexq\",\"smail\":\"ProfilInfo_smail__FSwMl\",\"status\":\"ProfilInfo_status__1cgF7\",\"image\":\"ProfilInfo_image__3Ib-T\",\"contact\":\"ProfilInfo_contact__2w-EG\",\"formError\":\"ProfilInfo_formError__1FrnV\"};","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport classes from \"./Dialog.module.css\";\r\nimport {Textarea} from \"../common/FormControl/formComponent\";\r\nimport {maxLength, minLength, required} from \"../../Utility/ValidateForm/validator\";\r\n\r\nconst maxLength30 =  maxLength(30);\r\nconst minLength2 =  minLength(2);\r\n\r\nlet DialogForm = (props) =>{\r\n    const { handleSubmit } = props;\r\n     return (\r\n         <form onSubmit={handleSubmit}>\r\n             <div >\r\n                 {/*<label htmlFor=\"dialog\">Add Message</label>*/}\r\n             <Field name={'newMessageText'} component={Textarea} validate={[required,maxLength30,minLength2 ]}  placeholder={'add message'} />\r\n             </div>\r\n             <button  className={classes.btn}>Add Message</button>\r\n\r\n         </form>\r\n\r\n     )\r\n\r\n}\r\n\r\n  DialogForm = reduxForm ({\r\n    form: 'dialogMessage'\r\n})(DialogForm);\r\n\r\nexport default DialogForm","module.exports = __webpack_public_path__ + \"static/media/smail.dc83c11b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPost_posts__3uybX\",\"head\":\"MyPost_head__3OnYo\",\"btn\":\"MyPost_btn__2oxkb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"ProfAvatar_head__2tozX\",\"img\":\"ProfAvatar_img__1tGOi\",\"content\":\"ProfAvatar_content__3qisj\",\"block\":\"ProfAvatar_block__17nj5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1wyV9\",\"imgAvat\":\"Post_imgAvat__2bhyy\"};","import React from \"react\";\r\nimport classes from './ProfilInfo.module.css';\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport smail from \"../../../Photo/Images/smail.png\"\r\n\r\nclass ProfilStatus extends React.Component {\r\n\r\n     state = {\r\n         editMode: false,\r\n         status: this.props.status\r\n    }\r\n\r\n    activeEditMode = () => {\r\n\r\n       // console.log(this)\r\n         this.setState({\r\n             editMode: true\r\n         })\r\n        // this.state.editMode=true;\r\n        // this.forceUpdate();\r\n        // console.log(this.state.editMode)\r\n     }\r\n    deActiveEditMode ()  {\r\n\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        // this.state.editMode=true;\r\n        // this.forceUpdate();\r\n        this.props.updateStatus(this.state.status);\r\n     }\r\n\r\n    changeStatus = (e) => {\r\n         this.setState({\r\n              status: e.target.value\r\n         })\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n      if (prevProps.status !== this.props.status ) {\r\n          this.setState({\r\n              status: this.props.status\r\n          })\r\n      }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        // if (!this.props.profile){return <Preloader />}\r\n        return (\r\n            <div>\r\n                {!this.state.editMode\r\n                    ?\r\n                        <div className={classes.status}>\r\n                            <span onDoubleClick={this.activeEditMode}><i>STATUS:</i>  {this.props.status || \"'Noy status'\"}</span>\r\n                        </div>\r\n                    :\r\n                        <div className={classes.status}>\r\n                            <input  onChange={this.changeStatus} autoFocus={true} onBlur={this.deActiveEditMode.bind(this)} type={'text'} value={this.state.status}/>\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProfilStatus","import React from \"react\";\r\nimport classes from './ProfilInfo.module.css';\r\nimport {useState,useEffect} from \"react\";\r\n\r\n\r\n\r\n\r\nconst  ProfilStatusHook = (props) =>{\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n\r\n        setStatus(props.status)\r\n    },[props.status]);\r\n\r\n    const activeEditMode = () => {\r\n\r\n        setEditMode(true);\r\n\r\n    }\r\n\r\n\r\n    const deActiveEditMode = () => {\r\n\r\n         setEditMode(false);\r\n\r\n        props.updateStatus(status)\r\n\r\n    }\r\n    const changeStatus = (e) => {\r\n\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode\r\n                    ?\r\n                    <div className={classes.status}>\r\n                        <span onDoubleClick={activeEditMode} ><i>STATUS :</i>  {props.status} </span>\r\n                    </div>\r\n\r\n                    :\r\n                        <div className={classes.status}>\r\n                            <input  onChange={changeStatus}  onBlur={deActiveEditMode} type={'text'} value={status} />\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\n\r\nexport default ProfilStatusHook","import React from 'react'\r\nimport  {reduxForm} from \"redux-form\";\r\nimport classes from \"./ProfilInfo.module.css\";\r\nimport smail from \"../../../Photo/Images/smail.png\";\r\nimport {createField, Input, Textarea} from \"../../common/FormControl/formComponent\";\r\n\r\n\r\n\r\nconst ProfDataForm = ({...props}) => {\r\n\r\n        const { handleSubmit } = props;\r\n\r\n        return  <form  onSubmit={handleSubmit}>\r\n\r\n            <button type={\"submit\"}>Save</button>\r\n\r\n            { props.error\r\n                ?  <div className={classes.formError}>\r\n                    {props.error}\r\n                </div>\r\n                :  ''\r\n            }\r\n\r\n            <div><b>FullName</b> : {createField( \"FullName\",\r\n                \"fullName\", [],  Input)}</div>\r\n                {/*{props.profile.fullName}</div>*/}\r\n\r\n            <div><b>LookingForAJob</b> : {createField( \"\", \"lookingForAJob\",\r\n                [],  Input,{type:\"checkbox\"})}\r\n        {/*        {props.profile.lookingForAJob ? 'Yes' : 'No'}*/}\r\n        {/*        <img className={classes.smail} src={smail} alt={'image'}/>*/}\r\n            </div>\r\n        {/*    {props.profile.lookingForAJob &&*/}\r\n            <div><b>My professional skills</b> : {createField( \"My professional skills\", \"lookingForAJobDescription\",\r\n                [],  Textarea)}\r\n        {/*        {props.profile.lookingForAJobDescription}</div>{/*    }*/}\r\n            </div>\r\n            <div><b>About Me</b> : {createField( \"About Me\", \"aboutMe\", [],  Textarea)}\r\n                {/*        {props.profile.aboutMe}</div>*/}\r\n            </div>\r\n            <div>\r\n            <h4><b>Contacts</b> : </h4> {Object.keys(props.profile.contacts).map(key => {\r\n              return <div key={key}>\r\n                   <i>{key} : </i>\r\n                  {createField(key,\"contacts.\"+ key, [],  Input)}\r\n              </div>\r\n            })}\r\n            {/*return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>})}*/}\r\n            </div>\r\n\r\n        </form>\r\n\r\n\r\n    }\r\n\r\n     const ProfDataFormReduxForm = reduxForm({form: 'editProfile'})(ProfDataForm)\r\n\r\nexport default ProfDataFormReduxForm","import React from \"react\";\r\nimport classes from './ProfilInfo.module.css';\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport smail from \"../../../Photo/Images/smail.png\"\r\nimport ProfilStatus from \"./ProfilStatus\";\r\nimport ProfilStatusWithHook from \"./ProfilStatusWithHook\";\r\nimport kot from \"../../../Photo/Images/kot.png\"\r\nimport ProfilStatusHook from \"./ProfilStatusWithHook\";\r\nimport {useState} from \"react\";\r\nimport ProfDataForm from \"./ProfDataForm\";\r\n\r\n\r\nconst ProfInfo = ({...props}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onPhotoChange = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.editProfile(formData)\r\n            .then(\r\n                  () =>{\r\n                  setEditMode(false);\r\n                }\r\n        )\r\n\r\n        // props.loginPost(formData.Email, formData.Password, formData.RememberMe)\r\n        //  alert(formData.email,formData.password,formData.rememberMe)\r\n        console.log(formData)\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={classes.imgCont} alt={'image'}\r\n                     src={'https://sites.google.com/site/prirodanasevseegooglgfgf/_/rsrc/1463456237313/home/priroda_gory_nebo_ozero_oblaka_81150_1920x1080.jpg'}/>\r\n            </div>\r\n           <div className={classes.contact}>\r\n            <div>\r\n                <ProfilStatusHook status={props.status} updateStatus={props.updateStatus}/>\r\n                {/*<ProfilStatus status={props.status} updateStatus={props.updateStatus}/>*/}\r\n            </div>\r\n            <div>\r\n                <img src={props.profile.photos.small || kot} className={classes.image} alt={'image'}/>\r\n\r\n                {props.isOwner && <input type={\"file\"} onChange={onPhotoChange}/>}\r\n\r\n            </div>\r\n\r\n\r\n            {editMode\r\n                ? <ProfDataForm {...props} onSubmit={onSubmit}  initialValues={props.profile}  />\r\n                : <ProfData goToEditMode={()=>{setEditMode( true) }}  {...props}  isOwner={props.isOwner}  />\r\n            }\r\n\r\n            {/*<div>*/}\r\n\r\n            {/*    <div> <b>FullName</b> : {props.profile.fullName}</div>*/}\r\n            {/*    <div> <b>About Me</b> : {props.profile.aboutMe}</div>*/}\r\n            {/*    <div> <b>LookingForAJob</b> : {props.profile.lookingForAJob ? 'Yes' : 'No'}*/}\r\n            {/*        <img className={classes.smail}  src={smail} alt={'image'}/>*/}\r\n            {/*    </div>*/}\r\n            {/*    {props.profile.lookingForAJob &&*/}\r\n            {/*    <div> <b>My professional skills</b> : {props.profile.lookingForAJobDescription}</div>*/}\r\n            {/*    }*/}\r\n            {/*    <h4><b>Contacts</b> : </h4> {Object.keys(props.profile.contacts).map(key =>{*/}\r\n            {/*          return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />*/}\r\n            {/*})}*/}\r\n\r\n            {/*    /!*<div> Facebook : {props.profile.contacts.facebook}</div>*!/*/}\r\n            {/*    /!*<div> VK : {props.profile.contacts.vk}</div>*!/*/}\r\n            {/*    /!*<div> Twitter : {props.profile.contacts.twitter}</div>*!/*/}\r\n            {/*    /!*<div> Instagram : {props.profile.contacts.instagram}</div>*!/*/}\r\n            {/*    /!*<-div> Git Hub : {props.profile.contacts.github}</div>*!/*/}\r\n            {/*    /!*<div> Youtube : {props.profile.contacts.Youtube}</div>*!/*/}\r\n            {/*    /!*<div>MainLink : {props.profile.mainLink}</div>*!/*/}\r\n            {/*    /!*<div> FullName : {props.profile.fullName}</div>*!/*/}\r\n            {/*    /!*<div>Photos : {props.profile.photos} </div>*!/*/}\r\n            {/*</div>*/}\r\n           </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div><b>{contactTitle}</b> : {contactValue} </div>\r\n}\r\n\r\nconst ProfData = ({...props}) => {\r\n    return <div>\r\n                  {props.isOwner  &&  <button onClick={props.goToEditMode}>Edit</button>}\r\n\r\n                    <div><b>FullName</b> : {props.profile.fullName}</div>\r\n                    <div><b>About Me</b> : {props.profile.aboutMe} </div>\r\n                    <div><b>LookingForAJob</b> : {props.profile.lookingForAJob ? 'Yes' : 'No'}\r\n                        <img className={classes.smail} src={smail} alt={'image'}/>\r\n                    </div>\r\n                 {props.profile.lookingForAJob &&\r\n                 <div><b>My professional skills</b> : {props.profile.lookingForAJobDescription}</div>\r\n                 }\r\n                 <h4><b>Contacts</b> : </h4> {Object.keys(props.profile.contacts).map(key => {\r\n                 return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                })}\r\n\r\n                          {/*<div> Facebook : {props.profile.contacts.facebook}</div>*/}\r\n                          {/*<div> VK : {props.profile.contacts.vk}</div>*/}\r\n                          {/*<div> Twitter : {props.profile.contacts.twitter}</div>*/}\r\n                          {/*<div> Instagram : {props.profile.contacts.instagram}</div>*/}\r\n                          {/*<div> Git Hub : {props.profile.contacts.github}</div>*/}\r\n                          {/*<div> Youtube : {props.profile.contacts.Youtube}</div>*/}\r\n                          {/*<div>MainLink : {props.profile.mainLink}</div>*/}\r\n                          {/*<div> FullName : {props.profile.fullName}</div>*/}\r\n                          {/*<div>Photos : {props.profile.photos} </div>*/}\r\n    </div>\r\n}\r\nexport default ProfInfo","import React from \"react\";\r\nimport classes from './ProfAvatar.module.css'\r\nimport photo from \"../../../Photo/Images/kot.png\";\r\n\r\nconst ProfAvatar = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={classes.img} alt={'image'}\r\n                     src={'https://cdn.psychologytoday.com/sites/default/files/styles/article-inline-half-caption/public/field_blog_entry_images/2020-06/angry_chihuahua.png?itok=TWxYDbOT'}/>\r\n                <div className={classes.block}>\r\n                    <h3 className={classes.head}>ZAGOLOVOK</h3>\r\n                    <p className={classes.content}>\r\n                        {/*<img src={photo}/>*/}\r\n                        <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci amet animi architecto consequuntur cupiditate deserunt distinctio, dolore ea ipsam labore laborum minima numquam, omnis porro quae sapiente tempora vero voluptate.</span><span>Aliquam blanditiis deserunt hic, itaque nam non qui quis voluptate! Accusamus ducimus esse explicabo inventore magni suscipit unde, voluptates! Culpa distinctio dolorum eligendi neque quaerat quas quo sed similique voluptas.</span><span>Accusamus aliquam eaque eligendi exercitationem illum incidunt labore magnam maiores neque, nostrum numquam officiis praesentium quisquam sunt tempore! Aliquid amet dolores explicabo fuga id magnam minima, minus pariatur quisquam sunt.</span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfAvatar","import React from \"react\";\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) =>{\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.post}>Post: {props.message}</div>\r\n            <img className={classes.imgAvat} src={'https://memax.club/wp-content/uploads/2019/06/Krasivye_avatarki_dlya_kartinki_1_09074657.jpg'}/>\r\n            <span>Like: </span> {props.like}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport classes from \"./MyPost.module.css\";\r\nimport DialogForm from \"../../Dialogs/Dialog.Form\";\r\nimport {required, maxLength, minLength} from \"../../../Utility/ValidateForm/validator\";\r\nimport {Textarea} from \"../../common/FormControl/formComponent\";\r\n\r\nconst maxLength20 =  maxLength(20);\r\nconst minLength2 =  minLength(2);\r\n\r\nlet MyPostForm = (props) => {\r\n    const { handleSubmit } = props;\r\n    return(\r\n    <form onSubmit={handleSubmit}>\r\n        <div className={classes.block}>\r\n            {/*<label htmlFor=\"Post\">Post</label>*/}\r\n            <Field name={'newText'} component={Textarea} placeholder={'add post'} validate={[required,maxLength20,minLength2 ]}/>\r\n        </div>\r\n          <button  className={classes.btn}>Add post</button>\r\n    </form>\r\n    )\r\n}\r\n\r\nMyPostForm = reduxForm({\r\n    form: 'postMessage'\r\n})(MyPostForm);\r\n\r\nexport default MyPostForm","import React from 'react';\r\nimport classes from './MyPost.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport MyPostForm from \"./MyPostForm\";\r\n\r\n\r\nconst MyPost = (props) => {\r\n    // console.log('RENDER')\r\n    let PostUser = props.PostData.map(p => <Post like={p.like} message={p.message} id={p.id} key={p.id}/>);\r\n\r\n    // let newPostText = React.createRef();\r\n\r\n    // const addNewPost = () => {\r\n    //     // let newPost = newPostText.current.value;\r\n    //     props.addPost();\r\n    //     // newPostText.current.value = '';\r\n    //     // props.addChangeText('')\r\n    //     // let action = addNewPostActionCreator();\r\n    //     // props.dispatch(action);\r\n    // }\r\n    //\r\n    // const handleChange = () => {\r\n    //     let newPost = newPostText.current.value;\r\n    //     props.addChangeText(newPost)\r\n    //     // props.dispatch(handleChangeActionCreator(newPost));\r\n    //     console.log(newPost)\r\n    // }\r\n\r\n    const onSubmit = (value) => {\r\n\r\n        props.addPost(value.newText)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.posts}>\r\n            <h4 className={classes.head}>{props.post}</h4>\r\n\r\n            <MyPostForm onSubmit={onSubmit}/>\r\n            {PostUser}\r\n\r\n            {/*<div>*/}\r\n            {/* <div className={classes.block}>*/}\r\n            {/*     <textarea ref={newPostText} onChange={handleChange} value={props.newText} placeholder={'add post'}/>*/}\r\n            {/*     <button onClick={addNewPost} className={classes.btn}>Add post</button>*/}\r\n            {/* </div>*/}\r\n            {/* <Post like={PostData[0].like} message={PostData[0].message} />*/}\r\n            {/* <Post like={PostData[1].like} message={PostData[1].message}/>*/}\r\n            {/* /!*<Post like={PostData[2].like} message={PostData[2].message}/>*!/*/}\r\n            {/*</div>*/}\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo (MyPost);\r\n\r\n  //       CLASS COMPONENT - OPTIMISATION => \"shouldComponentUpdate\" end \"PureComponent\"\r\n\r\n// class MyPost extends PureComponent {                      // OPTIMISATION - noy RENDER\r\n//\r\n//     // shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n//     //   return   nextProps !== this.props  ||  nextState !== this.state\r\n//     // }\r\n//\r\n//     render() {\r\n//         // console.log('RENDER')\r\n//         let PostUser = this.props.PostData.map(p => <Post like={p.like} message={p.message} id={p.id} key={p.id}/>);\r\n//\r\n//         // let newPostText = React.createRef();\r\n//\r\n//         // const addNewPost = () => {\r\n//         //     // let newPost = newPostText.current.value;\r\n//         //     props.addPost();\r\n//         //     // newPostText.current.value = '';\r\n//         //     // props.addChangeText('')\r\n//         //     // let action = addNewPostActionCreator();\r\n//         //     // props.dispatch(action);\r\n//         // }\r\n//         //\r\n//         // const handleChange = () => {\r\n//         //     let newPost = newPostText.current.value;\r\n//         //     props.addChangeText(newPost)\r\n//         //     // props.dispatch(handleChangeActionCreator(newPost));\r\n//         //     console.log(newPost)\r\n//         // }\r\n//\r\n//         const onSubmit = (value) => {\r\n//\r\n//             this.props.addPost(value.newText)\r\n//         }\r\n//\r\n//         return (\r\n//             <div className={classes.posts}>\r\n//                 <h4 className={classes.head}>{this.props.post}</h4>\r\n//\r\n//                 <MyPostForm onSubmit={onSubmit}/>\r\n//                 {PostUser}\r\n//\r\n//                 {/*<div>*/}\r\n//                 {/* <div className={classes.block}>*/}\r\n//                 {/*     <textarea ref={newPostText} onChange={handleChange} value={props.newText} placeholder={'add post'}/>*/}\r\n//                 {/*     <button onClick={addNewPost} className={classes.btn}>Add post</button>*/}\r\n//                 {/* </div>*/}\r\n//                 {/* <Post like={PostData[0].like} message={PostData[0].message} />*/}\r\n//                 {/* <Post like={PostData[1].like} message={PostData[1].message}/>*/}\r\n//                 {/* /!*<Post like={PostData[2].like} message={PostData[2].message}/>*!/*/}\r\n//                 {/*</div>*/}\r\n//\r\n//             </div>\r\n//\r\n//         )\r\n//\r\n//     }\r\n// }\r\n//\r\n//\r\n// export default MyPost","import React from 'react';\r\nimport classes from './MyPost.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {addChangeText, addNewPostActionCreator, addPost, handleChangeActionCreator} from '../../../redux/prof_reducer';\r\nimport MyPost from \"./MyPost\";\r\n// import MyContext from \"../../../MyContext\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const MyPostContainer1 = (props) => {\r\n//     // let newPostText = React.createRef();\r\n//\r\n//     // const addNewPost = () => {\r\n//     //     // let newPost = newPostText.current.value;\r\n//     //     // props.addPost();\r\n//     //     // newPostText.current.value = '';\r\n//     //     // props.addChangeText('')\r\n//     //     let action = addNewPostActionCreator();\r\n//     //     props.store.dispatch(action);\r\n//     // }\r\n//     //\r\n//     // const handleChange = (newPost) => {\r\n//     //     // let newPost = newPostText.current.value;\r\n//     //     // props.addChangeText(newPost)\r\n//     //     props.store.dispatch(handleChangeActionCreator(newPost));\r\n//     // }\r\n//\r\n//\r\n//     return (\r\n//         <MyContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     const addNewPost = () => {\r\n//                         let action = addNewPostActionCreator();\r\n//                         store.dispatch(action);\r\n//                     }\r\n//                     const handleChange = (newPost) => {\r\n//                         store.dispatch(handleChangeActionCreator(newPost));\r\n//                     }\r\n//                     return (\r\n//\r\n//                         <MyPost addChangeText={handleChange} addPost={addNewPost} PostData={props.PostData}\r\n//                                 newText={props.newText} post={'MY POSTS'}/>\r\n//                     )\r\n//                 }\r\n//             }\r\n//         </MyContext.Consumer>\r\n//     )\r\n//\r\n// }\r\n//\r\n//\r\n// export default MyPostContainer1\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        state: state.profPage.PostData,\r\n        newText:  state.profPage.newText,\r\n        post:'MY POSTS'\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addChangeText: (newPost) =>{\r\n            dispatch(addChangeText(newPost));\r\n        },\r\n\r\n        addPost: (newText) =>{\r\n            let action = addPost(newText);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps,mapDispatchToProps) (MyPost);\r\n\r\n\r\nexport default MyPostContainer","import React, {Component} from 'react';\r\nimport ProfInfo from './ProfilInfo/ProfilInfo'\r\nimport ProfAvatar from './ProfAvatar/ProfAvatar'\r\nimport MyPostContainer from \"./MyPosts/MyPostContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n\r\n        <div >\r\n            <ProfInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}\r\n                      isOwner={props.isOwner} savePhoto={props.savePhoto}\r\n                      editProfile={props.editProfile}/>\r\n            <ProfAvatar />\r\n            <MyPostContainer  PostData={props.state.PostData} newText={props.state.newText}  post={'MY POSTS'} />\r\n\r\n            {/*<MyPost PostData={props.state.PostData} newText={props.state.newText} dispatch={props.dispatch}*/}\r\n            {/*        addPost={props.addPost}  addChangeText={props.addChangeText}*/}\r\n            {/*        post={'MY POSTS'}/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Profile","import React, {Component} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getStatus, profileThunkCreator, savePhoto,\r\n    setUsersProfile, updateStatus, saveProfile, editProfile\r\n} from \"../../redux/prof_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n     userUpdateProfile () {\r\n         let userId = this.props.match.params.userId;\r\n\r\n         if (!userId){\r\n\r\n             userId = this.props.authorisedUserId\r\n             if (!userId) {\r\n                 userId = this.props.history.push('/login')\r\n             }\r\n         }\r\n         this.props.getUsers(userId)\r\n         this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.userUpdateProfile()\r\n        //  let userId = this.props.match.params.userId;\r\n        //\r\n        //  if (!userId){\r\n        //\r\n        //      userId = this.props.authorisedUserId\r\n        //      // userId= 14585;\r\n        //      // <img src={'https://goodhostel.lviv.ua/sites/default/files/clAvHWVG4GE.jpg'}/>\r\n        //      //     // 1049;\r\n        //          // 14585;\r\n        //      if (!userId) {\r\n        //          userId = this.props.history.push('/login')\r\n        //      }\r\n        //  }\r\n        //  this.props.getUsers(userId)\r\n        // // this.props.profileThunkCreator(userId);\r\n        //  this.props.getStatus(userId);\r\n        //  // this.props.updateStatusThunkCreator(status);\r\n        //\r\n        // //  addAxios.getProfile(userId)\r\n        // // // axios.get(`https://social-network.samuraijs.com/api/1.0/Profile/`+userId)\r\n        // //\r\n        // //     .then(response => {\r\n        // //\r\n        // //     this.props.setUsersProfile(response.data);\r\n        // //\r\n        // // })\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n       if (this.props.match.params.userId !== prevProps.match.params.userId){\r\n              this.userUpdateProfile()\r\n       }\r\n\r\n        // let userId = this.props.match.params.userId;\r\n        //\r\n        // if (!userId){\r\n        //\r\n        //     userId = this.props.authorisedUserId\r\n        //     if (!userId) {\r\n        //         userId = this.props.history.push('/login')\r\n        //     }\r\n        // }\r\n        // this.props.getUsers(userId)\r\n        // this.props.getStatus(userId);\r\n    }\r\n\r\n    render () {\r\n             // if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n             return (\r\n                 <div >\r\n                    <Profile  {...this.props} profile={this.props.profile}\r\n                              status={this.props.status} updateStatus={this.props.updateStatus}\r\n                              isOwner={!this.props.match.params.userId}\r\n                              savePhoto={this.props.savePhoto}/>\r\n                              {/*saveProfile={this.props.saveProfile}*/}\r\n\r\n                 </div>\r\n             )\r\n         }\r\n}\r\n\r\n//       HOC\r\n\r\n// let RedirectComponent = (props) => {\r\n//\r\n//     if (!props.isAuth) return <Redirect to={'/login'} />\r\n//\r\n//     return  <ProfileContainer {...props} />\r\n//\r\n// }\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer) ;\r\n// let mapStateToPropsRedirect = (state) => ({\r\n//     isAuth: state.auth.isAuth\r\n// });\r\n// AuthRedirectComponent = connect(mapStateToPropsRedirect) (AuthRedirectComponent)\r\n\r\nlet mapStateToProps = (state) => ({\r\n    state: state.profPage,\r\n    profile: state.profPage.profile,\r\n    status: state.profPage.status,\r\n    authorisedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n\r\n\r\n\r\n});\r\n\r\n // let WithRouterProfileContainer = withRouter(AuthRedirectComponent)\r\n\r\n\r\n// export default connect (mapStateToProps, {setUsersProfile,profileThunkCreator}) (WithRouterProfileContainer);\r\nexport default compose(\r\n    connect (mapStateToProps, {setUsersProfile,\r\n        getUsers: profileThunkCreator,getStatus,updateStatus,savePhoto, editProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)\r\n(ProfileContainer)"],"sourceRoot":""}