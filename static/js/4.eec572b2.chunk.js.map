{"version":3,"sources":["components/Dialogs/Dialog.module.css","components/Dialogs/Dialog.Form.js","components/Dialogs/DialogUser/DialogUser.module.css","components/Dialogs/MessageUser/MessageUser.module.css","components/Dialogs/DialogUser/DialogUser.js","components/Dialogs/MessageUser/MessageUser.js","components/Dialogs/Dialog.js","components/Dialogs/DialogContainer.js"],"names":["module","exports","bg","circle","active","dialog","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","redux_form__WEBPACK_IMPORTED_MODULE_1__","redux_form__WEBPACK_IMPORTED_MODULE_2__","_Dialog_module_css__WEBPACK_IMPORTED_MODULE_3__","_Dialog_module_css__WEBPACK_IMPORTED_MODULE_3___default","_common_FormControl_formComponent__WEBPACK_IMPORTED_MODULE_4__","_Utility_ValidateForm_validator__WEBPACK_IMPORTED_MODULE_5__","maxLength30","maxLength","minLength2","minLength","DialogForm","props","handleSubmit","a","createElement","onSubmit","name","component","Textarea","validate","required","placeholder","className","classes","btn","reduxForm","form","dialogUser","imgAvatar","user","messageUser","DialogUser","path","id","react_default","src","img","alt","concat","react_router_dom","to","activeClassName","MessageUser","message","Dialogs","DialogUserData","state","DialogData","map","obj","i","Dialogs_DialogUser_DialogUser","key","MessageData","MessageUserData","Dialogs_MessageUser_MessageUser","messsages","Dialog_Form","value","addMessage","newMessageText","compose","connect","dialogPage","dispatch","withAuthRedirect","Dialog"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,GAAA,mBAAAC,OAAA,uBAAAC,OAAA,uBAAAC,OAAA,0DCDlB,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAAE,EAAAG,GAAAE,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAMMS,EAAeC,YAAU,IACzBC,EAAcC,YAAU,GAE1BC,EAAa,SAACC,GAAS,IACfC,EAAiBD,EAAjBC,aACP,OACId,EAAAe,EAAAC,cAAA,QAAMC,SAAUH,GACZd,EAAAe,EAAAC,cAAA,WAEAhB,EAAAe,EAAAC,cAACd,EAAA,EAAD,CAAOgB,KAAM,iBAAkBC,UAAWC,IAAUC,SAAU,CAACC,IAASd,EAAYE,GAAea,YAAa,iBAEhHvB,EAAAe,EAAAC,cAAA,UAASQ,UAAWC,IAAQC,KAA5B,iBAQXd,EAAae,YAAW,CACtBC,KAAM,iBADKD,CAEZf,GAEYA,2BC5BfpB,EAAAC,QAAA,CAAkBoC,WAAA,+BAAAjC,OAAA,2BAAAkC,UAAA,8BAAAC,KAAA,+CCAlBvC,EAAAC,QAAA,CAAkBuC,YAAA,wKCuBFC,EApBG,SAACpB,GAEhB,IAAIqB,EAAO,aAAerB,EAAMsB,GAGhC,OAEIC,EAAArB,EAAAC,cAAA,WAEIoB,EAAArB,EAAAC,cAAA,OAAKQ,UAAWC,IAAQK,UAAWO,IAAKxB,EAAMyB,IAAKC,IAAK1B,EAAMK,OAE9DkB,EAAArB,EAAAC,cAAA,MAAIQ,UAAWC,IAAQI,YACnBO,EAAArB,EAAAC,cAAA,MAAIQ,UAAS,GAAAgB,OAAKf,IAAQM,KAAb,MACTK,EAAArB,EAAAC,cAACyB,EAAA,EAAD,CAASC,GAAIR,EAAMS,gBAAiBlB,IAAQ7B,QAASiB,EAAMK,4BCJ/D0B,EAVI,SAAC/B,GACjB,OACIuB,EAAArB,EAAAC,cAAA,WACIoB,EAAArB,EAAAC,cAAA,MAAIQ,UAAWC,IAAQO,aACnBI,EAAArB,EAAAC,cAAA,UAAKH,EAAMgC,qBCsEZC,EAlEC,SAACjC,GAGb,IAAIkC,EAAiBlC,EAAMmC,MAAMC,WAAWC,IAAI,SAACC,EAAIC,GAAL,OAAWhB,EAAArB,EAAAC,cAACqC,EAAD,CAAYnC,KAAMiC,EAAIjC,KAAMiB,GAAIgB,EAAIhB,GAAIG,IAAKa,EAAIb,IAAKgB,IAAKF,MAClHG,EAAc1C,EAAMmC,MAAMQ,gBAAgBN,IAAI,SAACL,EAASO,GAAV,OAAgBhB,EAAArB,EAAAC,cAACyC,EAAD,CAAaZ,QAASA,EAAQA,QAASV,GAAIU,EAAQV,GAAImB,IAAKF,MAyB9H,OAEIhB,EAAArB,EAAAC,cAAA,OAAKQ,UAAWC,IAAQ/B,IACpB0C,EAAArB,EAAAC,cAAA,OAAKQ,UAAWC,IAAQ5B,QAClBkD,GAUNX,EAAArB,EAAAC,cAAA,OAAKQ,UAAWC,IAAQiC,WAEpBtB,EAAArB,EAAAC,cAAC2C,EAAA,EAAD,CAAY1C,SAtBR,SAAC2C,GAEb/C,EAAMgD,WAAWD,EAAME,mBAyBf1B,EAAArB,EAAAC,cAAA,OAAKQ,UAAWC,IAAQ9B,QACvByC,EAAArB,EAAAC,cAAA,OAAKQ,UAAS,GAAAgB,OAAKf,IAAQ9B,OAAb,KAAA6C,OAAuBf,IAAQ7B,SAAW2D,wCClB1DQ,sBACXC,YAzBoB,SAAChB,GAErB,MAAO,CACHA,MAAOA,EAAMiB,aAKM,SAACC,GACxB,MAAO,CAKHL,WAAY,SAACC,GACTI,EAASL,YAAWC,QAW5BK,IAFWJ,CAGdK","file":"static/js/4.eec572b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Dialog_bg__1lYOv\",\"circle\":\"Dialog_circle__jrOb2\",\"active\":\"Dialog_active__3ACLl\",\"dialog\":\"Dialog_dialog__3T9Jg\"};","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport classes from \"./Dialog.module.css\";\r\nimport {Textarea} from \"../common/FormControl/formComponent\";\r\nimport {maxLength, minLength, required} from \"../../Utility/ValidateForm/validator\";\r\n\r\nconst maxLength30 =  maxLength(30);\r\nconst minLength2 =  minLength(2);\r\n\r\nlet DialogForm = (props) =>{\r\n    const { handleSubmit } = props;\r\n     return (\r\n         <form onSubmit={handleSubmit}>\r\n             <div >\r\n                 {/*<label htmlFor=\"dialog\">Add Message</label>*/}\r\n             <Field name={'newMessageText'} component={Textarea} validate={[required,maxLength30,minLength2 ]}  placeholder={'add message'} />\r\n             </div>\r\n             <button  className={classes.btn}>Add Message</button>\r\n\r\n         </form>\r\n\r\n     )\r\n\r\n}\r\n\r\n  DialogForm = reduxForm ({\r\n    form: 'dialogMessage'\r\n})(DialogForm);\r\n\r\nexport default DialogForm","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogUser\":\"DialogUser_dialogUser__2s8UA\",\"active\":\"DialogUser_active__9hyf1\",\"imgAvatar\":\"DialogUser_imgAvatar__XkIH6\",\"user\":\"DialogUser_user__2Rr-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageUser\":\"MessageUser_messageUser__n30J9\"};","import React from \"react\";\r\nimport classes from './DialogUser.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogUser = (props) => {\r\n\r\n    let path = '/dialogs/1' + props.id\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <img className={classes.imgAvatar} src={props.img} alt={props.name} />\r\n\r\n            <ul className={classes.dialogUser}>\r\n                <li className={`${classes.user} `}>\r\n                    <NavLink to={path} activeClassName={classes.active}>{props.name}</NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport  default DialogUser","import React from \"react\";\r\nimport classes from './MessageUser.module.css';\r\n\r\nconst MessageUser = (props) => {\r\n    return (\r\n        <div>\r\n            <ul className={classes.messageUser}>\r\n                <li>{props.message}</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  MessageUser","import React, {Component} from 'react';\r\nimport  { Redirect } from 'react-router-dom'\r\nimport classes from './Dialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport DialogUser from './DialogUser/DialogUser';\r\nimport MessageUser from './MessageUser/MessageUser';\r\nimport {addNewMessageActionCreator, handleChangeDialogActionCreator} from '../../redux/dialog_reducer';\r\nimport DialogForm from \"./Dialog.Form\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    // let state = props.store.getState().dialogPage\r\n\r\n    let DialogUserData = props.state.DialogData.map((obj,i) => <DialogUser name={obj.name} id={obj.id} img={obj.img} key={i}/>);\r\n    let MessageData = props.state.MessageUserData.map((message, i) => <MessageUser message={message.message} id={message.id} key={i}/>);\r\n\r\n    // let newMessage = React.createRef();\r\n\r\n    // const addNewMessage = () =>{\r\n    //     // let messageText = newMessage.current.value;\r\n    //     props.addMessage();\r\n    //     // newMessage.current.value = '';\r\n    //    // props.addChangeNewMessage('');\r\n    //    //  props.dispatch(addNewMessageActionCreator());\r\n    // }\r\n    //\r\n    // const handleChange = (e) =>{\r\n    //     let messageText = e.target.value;\r\n    //     props.addChangeNewMessage(messageText)\r\n    //     // props.dispatch(handleChangeDialogActionCreator(messageText));\r\n    // }\r\n         // if (!props.isAuth) return <Redirect to={'/Login'} />\r\n\r\n    const onSubmit =(value) =>{\r\n        // alert(value.newMessageText)\r\n        props.addMessage(value.newMessageText)\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={classes.bg}>\r\n            <div className={classes.dialog}>\r\n                { DialogUserData }\r\n                {/*<DialogUser name={avatar[8].name} id={avatar[8].id}  img={avatar[8].img}/>*/}\r\n                {/*<DialogUser name={DialogData[1].name} id={DialogData[1].id}/>*/}\r\n                {/*<DialogUser name={DialogData[2].name} id={DialogData[2].id}/>*/}\r\n                {/*<DialogUser name={'Viktor'} id={'4'}/>*/}\r\n                {/*<DialogUser name={'Andre'} id={'5'}/>*/}\r\n                {/*<DialogUser name={'Tom'} id={'6'}/>*/}\r\n                {/*<DialogUser name={'Stas'} id={'7'}/>*/}\r\n                {/*<DialogUser name={'Vova'} id={'8'}/>*/}\r\n            </div>\r\n            <div className={classes.messsages}>\r\n\r\n                <DialogForm onSubmit={onSubmit} />\r\n\r\n                 {/*<textarea  onChange={handleChange} value={props.state.newMessageText}  placeholder={'add message'}> </textarea>*/}\r\n                 {/*<button onClick={ addNewMessage } className={classes.btn}>Add Message</button>*/}\r\n\r\n                <div className={classes.circle}>\r\n                 <div className={`${classes.circle} ${classes.active}`}>{MessageData}</div>\r\n                </div>\r\n\r\n\r\n                {/*<MessageUser message={MessageUserData[0].message} id={MessageUserData[0].id}/>*/}\r\n                {/*<MessageUser message={MessageUserData[1].message} id={MessageUserData[1].id}/>*/}\r\n                {/*<MessageUser message={MessageUserData[2].message}/>*/}\r\n                {/*<MessageUser message={MessageUserData[3].message}/>*/}\r\n                {/*<MessageUser message={MessageUserData[4].message}/>*/}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React, {Component} from 'react';\r\nimport {addChangeNewMessage, addMessage,} from '../../redux/dialog_reducer';\r\nimport Dialogs from \"./Dialog\";\r\nimport MyContext from \"../../MyContext\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Dialog from \"./Dialog\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n//       HOC\r\n\r\n// let AuthRedirectComponent= (props) =>{\r\n//     if (!props.isAuth) return <Redirect to={'/Login'} />\r\n//\r\n//     return  <Dialog {...props} />\r\n// }\r\n// let AuthRedirectComponent = withAuthRedirect(Dialog);\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        state: state.dialogPage,\r\n        // isAuth: state.auth.isAuth\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // addChangeNewMessage: (messageText) => {\r\n        //     dispatch(addChangeNewMessage(messageText))\r\n        // },\r\n\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessage(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// const DialogContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n//\r\n// export default DialogContainer\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)\r\n(Dialog)\r\n\r\n\r\n// const DialogContainer1 = (props) => {\r\n//\r\n//     // const addNewMessage = () =>{\r\n//     //     // let messageText = newMessage.current.value;\r\n//     //     // props.addMessage();\r\n//     //     // newMessage.current.value = '';\r\n//     //    // props.addChangeNewMessage('');\r\n//     //     props.store.dispatch(addNewMessageActionCreator());\r\n//     // }\r\n//     //\r\n//     // const handleChange = (messageText) =>{\r\n//     //     // let messageText = newMessage.current.value;\r\n//     //     // props.addChangeNewMessage(messageText)\r\n//     //     props.store.dispatch(handleChangeDialogActionCreator(messageText));\r\n//     // }\r\n//\r\n//\r\n//     return (\r\n//         <MyContext.Consumer>\r\n//             {\r\n//                 (store) => {\r\n//                     const addNewMessage = () =>{\r\n//                         store.dispatch(addNewMessageActionCreator());\r\n//                     }\r\n//\r\n//                     const handleChange = (messageText) =>{\r\n//                         store.dispatch(handleChangeDialogActionCreator(messageText));\r\n//                     }\r\n//                     return (\r\n//                     <div>\r\n//                         <div>\r\n//                             <Dialogs data={props.data} addChangeNewMessage={handleChange} addMessage={addNewMessage}/>\r\n//                         </div>\r\n//                     </div>\r\n//                     )\r\n//                 }\r\n//\r\n//             }\r\n//         </MyContext.Consumer>\r\n//     )\r\n// }\r\n//\r\n// export default DialogContainer1"],"sourceRoot":""}