{"version":3,"sources":["components/Users/pagination.module.css","components/Users/user.module.css","components/Users/Paginator.js","components/Users/user.js","components/Users/UserF.js","redux/users_selectors.js","components/Users/UserContainer.js"],"names":["module","exports","active","pagesNum","paginator","pageNumber","selectedPage","photo","Paginator","_ref","currentPage","onChangePage","totalUsersCount","pageSize","_ref$pageNumberSizes","pageNumberSizes","pageCount","Math","ceil","pages","i","push","pageCountSize","_useState","useState","_useState2","Object","slicedToArray","setPageNumber","leftPortionPageNumber","rightPortionPageNumber","react_default","a","createElement","className","classes","onClick","filter","p","map","key","e","User","user","disableButton","unFollowThunkCreator","FollowThunkCreator","react_router_dom","to","id","src","photos","small","alt","followed","disabled","some","name","status","UsersF","users","props","objectWithoutProperties","Users_Paginator","Users_user","getUsersSelector","state","usersPage","pageSizeSelector","totalUsersCountSelector","currentPageSelector","isLoadingSelector","isLoading","disableButtonSector","UsersApiContainer","_this","getUsersThunkCreator","this","Fragment","preloader","UserF","follow","unfollow","disableButtonFol","React","Component","compose","withAuthRedirect","connect","setUsers","setCurrentPage","setTotalUsersCount","togglePreloader"],"mappings":"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","file":"static/js/5.2ef43132.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"pagination_active__2NIEH\",\"pagesNum\":\"pagination_pagesNum__1yoTw\",\"paginator\":\"pagination_paginator__1Xm_O\",\"pageNumber\":\"pagination_pageNumber__3fgY4\",\"selectedPage\":\"pagination_selectedPage__1t8VB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"user_photo__28Ith\"};","import React from 'react'\r\nimport classes from \"./pagination.module.css\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst Paginator = ({currentPage,onChangePage,totalUsersCount,pageSize, pageNumberSizes=10}) => {\r\n\r\n\r\n    let pageCount = Math.ceil((totalUsersCount/pageSize))\r\n    let  pages = [];\r\n    for (let i=1;  i <= pageCount; i++ ){\r\n        pages.push(i);\r\n    }\r\n    const pageCountSize = Math.ceil(pageCount/pageNumberSizes); //   /10 = pageNumberSizes\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const leftPortionPageNumber = (pageNumber-1) * pageNumberSizes + 1;\r\n    const rightPortionPageNumber = pageNumber * pageNumberSizes;\r\n\r\n    return (\r\n        <div className={classes.paginator}>\r\n            {pageNumber > 1 &&\r\n                <button onClick={() =>{setPageNumber(pageNumber-1)}}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={  currentPage === p ? classes.selectedPage : classes.pageNumber }\r\n                    // [classes.selectedPage] : currentPage === p},\r\n                    //     classes.pageNumber) }\r\n                              key={p}\r\n                              onClick={(e) => {\r\n                                  onChangePage(p);\r\n                              }} >{p}</span>\r\n                    })}\r\n            { pageCountSize > pageNumber  ?\r\n                <button onClick={() => {setPageNumber(pageNumber + 1)}}>NEXT</button>\r\n                                          : null\r\n            }\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n    //  return  (\r\n    //          <div className={classes.pagesNum}>\r\n    //             { pages.map((p ,i) => {\r\n    //\r\n    //                 return  <span key={i} className={ currentPage === p  ?  classes.active : classes.pageNum }\r\n    //                               onClick={(e) =>{onChangePage(p)}}> {p} </span>}) }\r\n    //\r\n    //         </div>\r\n    // )\r\n\r\n}\r\n\r\nexport default Paginator","import React, {Component} from 'react'\r\nimport * as axios from \"axios\";\r\nimport photo from \"../../Photo/Images/user.png\";\r\nimport classes from \"./user.module.css\";\r\nimport UserContainer from \"./UserContainer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {userApi} from \"../../Api/api\";\r\nimport Paginator from \"./Paginator\";\r\n\r\nconst User = ({user,disableButton,unFollowThunkCreator,FollowThunkCreator}) => {\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n             <div>\r\n                    <div>\r\n                        {/*<img src={user.photoUrl} className={classes.photo}/>*/}\r\n\r\n                        <NavLink to={'/Profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : photo} alt={'image'} className={classes.photo}/>\r\n                        </NavLink>\r\n\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={disableButton.some(id => id === user.id)} onClick={() => {\r\n\r\n                                unFollowThunkCreator(user.id)\r\n                        //      props.disableButtonFol(true, user.id)\r\n                        // userApi.deleteUser(user.id).then(data => {\r\n                        //\r\n                        //                if (data.resultCode === 0) {\r\n                        //                     props.unfollow(user.id)\r\n                        //                 }\r\n                        //     props.disableButtonFol(false,user.id)\r\n                        //             });\r\n\r\n                            }}>UnFollow</button>\r\n\r\n                            : <button disabled={disableButton.some(id => id === user.id)} onClick={() => {\r\n\r\n                                FollowThunkCreator(user.id)\r\n                           //      props.disableButtonFol(true, user.id)\r\n                           //\r\n                           // userApi.postUser(user.id).then(data => {\r\n                           //\r\n                           //         if (data.resultCode === 0) {\r\n                           //             props.follow(user.id)\r\n                           //         }\r\n                           //     props.disableButtonFol(false,user.id)\r\n                           //\r\n                           //      });\r\n                            }}>Follow</button>\r\n                        }\r\n\r\n                    </div>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default User","import React, {Component} from 'react'\r\n// import * as axios from \"axios\";\r\n// import photo from \"../../Photo/Images/user.png\";\r\n// import classes from \"./user.module.css\";\r\n// import UserContainer from \"./UserContainer\";\r\n// import {NavLink} from \"react-router-dom\";\r\n// import {userApi} from \"../../Api/api\";\r\nimport Paginator from \"./Paginator\";\r\nimport User from \"./user\";\r\n\r\nconst UsersF = ({currentPage,onChangePage,totalUsersCount,pageSize,users,...props}) => {\r\n\r\n// let addUsers = () => {\r\n//     if (props.users.length === 0) {\r\n//\r\n//         axios.get('https://social-network.samuraijs.com/api/1.0/users').then(response => {\r\n//\r\n//             props.setUsers(response.data.items);\r\n//         });\r\n//     }\r\n// }\r\n//\r\n// props.setUsers([\r\n//         {\r\n//             id: 1, photoUrl: 'https://download-cs.net/steam/avatars/3424.jpg',\r\n//             followed: true, fullName: 'Anna', status: 'I am a boss', location: {country: 'Ukraine', city: 'Kiev'}\r\n//         },\r\n//         {\r\n//             id: 2, photoUrl: 'https://cs16planet.ru/steam-avatars/images/avatar2960.jpg',\r\n//             followed: false, fullName: 'Ivan', status: 'I am a boss', location: {country: 'Ukraine', city: 'Lvov'}\r\n//         },\r\n//         {\r\n//             id: 3, photoUrl: 'https://download-cs.net/steam/avatars/3426.jpg',\r\n//             followed: false, fullName: 'Vovan', status: 'I am a boss', location: {country: 'Ukraine', city: 'Odessa'}\r\n//         },\r\n//         {\r\n//             id: 4,\r\n//             photoUrl: 'https://2ch.hk/sex/thumb/6329995/15866325175470s.jpg',\r\n//             followed: true, fullName: 'Sweta ',status: 'I am a boss',location: {country: 'Ukraine', city: 'Rivne'}\r\n//         }\r\n// ]);\r\n\r\n    // let pageCount = Math.ceil((props.totalUsersCount/props.pageSize)/100)\r\n    // let  pages = [];\r\n    // for (let i=1;  i <= pageCount; i++ ){\r\n    //     pages.push(i);\r\n    // }\r\n\r\n    return (\r\n\r\n        <div>\r\n             <Paginator currentPage={currentPage} onChangePage={onChangePage}\r\n                        totalUsersCount={totalUsersCount} pageSize={pageSize}/>\r\n\r\n            {/*<button onClick={this.addUsers}>ADD USERS</button>*/}\r\n\r\n            {\r\n                    users.map((user,i) => <User key={i} user={user}\r\n                                                disableButton={props.disableButton}\r\n                                                unFollowThunkCreator={props.unFollowThunkCreator}\r\n                                                FollowThunkCreator={props.FollowThunkCreator}/>\r\n                                                )\r\n                //         <div key={i}>\r\n                //     <div>\r\n                //         {/*<img src={user.photoUrl} className={classes.photo}/>*/}\r\n                //\r\n                //         <NavLink to={'/Profile/' + user.id}>\r\n                //         <img src={user.photos.small != null ? user.photos.small : photo} alt={'image'} className={classes.photo}/>\r\n                //         </NavLink>\r\n                //\r\n                //     </div>\r\n                //     <div>\r\n                //         {user.followed\r\n                //             ? <button disabled={props.disableButton.some(id => id === user.id)} onClick={() => {\r\n                //\r\n                //                 props.unFollowThunkCreator(user.id)\r\n                //         //      props.disableButtonFol(true, user.id)\r\n                //         // userApi.deleteUser(user.id).then(data => {\r\n                //         //\r\n                //         //                if (data.resultCode === 0) {\r\n                //         //                     props.unfollow(user.id)\r\n                //         //                 }\r\n                //         //     props.disableButtonFol(false,user.id)\r\n                //         //             });\r\n                //\r\n                //             }}>UnFollow</button>\r\n                //\r\n                //             : <button disabled={props.disableButton.some(id => id === user.id)} onClick={() => {\r\n                //\r\n                //                 props.FollowThunkCreator(user.id)\r\n                //            //      props.disableButtonFol(true, user.id)\r\n                //            //\r\n                //            // userApi.postUser(user.id).then(data => {\r\n                //            //\r\n                //            //         if (data.resultCode === 0) {\r\n                //            //             props.follow(user.id)\r\n                //            //         }\r\n                //            //     props.disableButtonFol(false,user.id)\r\n                //            //\r\n                //            //      });\r\n                //             }}>Follow</button>\r\n                //         }\r\n                //\r\n                //     </div>\r\n                //     <div>{user.name}</div>\r\n                //     <div>{user.status}</div>\r\n                //     <div>{\"user.location.country\"}</div>\r\n                //     <div>{\"user.location.city\"}</div>\r\n                //\r\n                // </div>)\r\n            }\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default UsersF","\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const pageSizeSelector = (state) =>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const totalUsersCountSelector = (state) =>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport  const currentPageSelector = (state) =>{\r\n    return state.usersPage.currentPage\r\n}\r\nexport const isLoadingSelector = (state) =>{\r\n    return state.usersPage.isLoading\r\n}\r\nexport const disableButtonSector = (state) =>{\r\n    return state.usersPage.disableButton\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect, Provider} from 'react-redux';\r\nimport {\r\n    disableButtonFol, follow, FollowThunkCreator, getUsersThunkCreator, setCurrentPage, setTotalUsersCount,\r\n    setUsers, togglePreloader, unfollow, unFollowThunkCreator,\r\n} from \"../../redux/user_reducer\";\r\nimport * as axios from 'axios';\r\nimport UsersF from './UserF';\r\nimport Preloader from \"../common/preloader/preloader\";\r\nimport {userApi} from \"../../Api/api\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    currentPageSelector, disableButtonSector,\r\n    getUsersSelector, isLoadingSelector,\r\n    pageSizeSelector,\r\n    totalUsersCountSelector,\r\n} from \"../../redux/users_selectors\";\r\n\r\n\r\nclass UsersApiContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n        // this.props.togglePreloader(true);\r\n        //\r\n        // userApi.getUserPage(this.props.currentPage, this.props.pageSize).then(data => {\r\n        //\r\n        //         this.props.togglePreloader(false);\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.setTotalUsersCount(data.totalCount);\r\n        //     });\r\n    }\r\n\r\n    onChangePage = (pageNumber) => {\r\n\r\n        this.props.getUsersThunkCreator(pageNumber)\r\n        // this.props.setCurrentPage(pageNumber);\r\n        // this.props.togglePreloader(true);\r\n        //\r\n        //\r\n        // userApi.getUserPage (pageNumber,this.props.pageSize).then(data => {\r\n        //\r\n        //         this.props.togglePreloader(false);\r\n        //         this.props.setUsers(data.items);\r\n        //\r\n        //     });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                {this.props.isLoading ? <Preloader/> : null}\r\n                <UsersF onChangePage={this.onChangePage} currentPage={this.props.currentPage}\r\n                        totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\r\n                        users={this.props.users} follow={this.props.follow} unfollow={this.props.unfollow}\r\n                        disableButtonFol={this.props.disableButtonFol} disableButton={this.props.disableButton}\r\n                        FollowThunkCreator={this.props.FollowThunkCreator}\r\n                        unFollowThunkCreator={this.props.unFollowThunkCreator} />\r\n            </>\r\n        )\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: pageSizeSelector(state),\r\n        totalUsersCount: totalUsersCountSelector(state),\r\n        currentPage: currentPageSelector(state),\r\n        isLoading: isLoadingSelector(state),\r\n        disableButton: disableButtonSector(state)\r\n    }\r\n}\r\n\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isLoading: state.usersPage.isLoading,\r\n//         disableButton: state.usersPage.disableButton\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) =>{\r\n//     return {\r\n//       follow:(userId) => {\r\n//          dispatch(followAC(userId));\r\n//       },\r\n//       unfollow:(userId) => {\r\n//           dispatch(unfollowAC(userId));\r\n//       },\r\n//         setUsers:(users) => {\r\n//           dispatch(setUsersAC(users));\r\n//         },\r\n//         setCurrentPage:(pageNumber) => {\r\n//           dispatch(setCurrentPageAC(pageNumber));\r\n//         },\r\n//         setTotalUsersCount:(totalCount) => {\r\n//           dispatch(setTotalUsersCountAC(totalCount));\r\n//         },\r\n//         togglePreloader: (isLoading) => {\r\n//           dispatch(togglePreloaderAC(isLoading))\r\n//         }\r\n//\r\n//     }\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         getUsers: (currentPage, pageSize) => {\r\n//             dispatch(getUsersThunkCreator(currentPage, pageSize))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n// const UserContainer = withAuthRedirect( connect(mapStateToProps, {follow, unfollow, setUsers, setCurrentPage,\r\n//     setTotalUsersCount, togglePreloader,disableButtonFol,\r\n//     getUsersThunkCreator, FollowThunkCreator, unFollowThunkCreator  })) (UsersApiContainer);\r\n\r\n// export default UserContainer\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect          (mapStateToProps, {follow, unfollow, setUsers,\r\n                      setCurrentPage, setTotalUsersCount, togglePreloader,disableButtonFol,\r\n                      getUsersThunkCreator, FollowThunkCreator, unFollowThunkCreator  }))\r\n(UsersApiContainer);"],"sourceRoot":""}